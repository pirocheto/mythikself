version: "3.8"

services:
  # web:
  #   build: .
  #   container_name: fastapi_app
  #   command: uvicorn app.main:app --host 0.0.0.0 --port 8000
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #     db:
  #       condition: service_healthy
  #     worker:
  #       condition: service_healthy
  #   env_file:
  #     - .env

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dramatiq_worker
    depends_on:
      redis:
        condition: service_healthy
    command: dramatiq app.dramatiq_app --processes 1 --threads 4
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "dramatiq", "--status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # worker:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: celery_worker
  #   command: celery -A app.celery_app worker --loglevel=info
  #   depends_on:
  #     redis:
  #       condition: service_healthy
  #     # db:
  #     #   condition: service_healthy
  #   env_file:
  #     - .env
  #   environment:
  #     C_FORCE_ROOT: true
  #     CELERYD_MAX_TASKS_PER_CHILD: 100
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "celery", "-A", "app.celery_app", "status"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # db:
  #   image: postgres:17.4
  #   container_name: postgres
  #   restart: unless-stopped
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "pg_isready -U ${POSTGRES_USER?Variable not set} -d ${POSTGRES_DATABASE?Variable not set} || exit 1",
  #       ]
  #     interval: 10s
  #     retries: 5
  #     start_period: 30s
  #     timeout: 10s
  #   volumes:
  #     - .volumes/db_data:/var/lib/postgresql/data/pgdata
  #   env_file:
  #     - .env
  #   environment:
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
  #     - POSTGRES_USER=${POSTGRES_USER?Variable not set}
  #     - POSTGRES_DATABASE=${POSTGRES_DATABASE?Variable not set}
  #   ports:
  #     - 5432:5432

  redis:
    image: redis:7.0.11
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - .volumes/redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
